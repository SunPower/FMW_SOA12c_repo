<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="2.0" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/AQ/EDICom/Publish856n204OracleToEDICOM/DequeEDISignal" xmlns:pc="http://xmlns.oracle.com/pcbpel/" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:ns4="http://www.sunpowercorp.com/utilities/indexparams/xsdV1" xmlns:opaque="http://xmlns.oracle.com/pcbpel/adapter/opaque/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns2="http://www.sunpowercorp.com/Publish856n204OracleToEDICOM/EDI_204/xsd/v1" xmlns:ns3="http://www.sunpowercorp.com/utilities/xsd/OrgAssignments/V1" xmlns:FILEAPP="http://xmlns.oracle.com/pcbpel/adapter/file/" xmlns:ns1="http://www.sunpowercorp.com/Publish856n204OracleToEDICOM/EDIOutboundFileBunch/xsd/v1" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:ns6="http://xmlns.oracle.com/pcbpel/adapter/file/EDICom/Publish856n204OracleToEDICOM/EDI_204/WriteEDIFileToLocal" xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:ns5="http://schemas.oracle.com/bpel/extension" xmlns:ns0="http://www.sunpowercorp.com/Publish856n204OracleToEDICOM/EDI/xsd/v1" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl tns pc plt ns4 opaque wsdl ns2 ns3 ns1 jca xsd ns5 ns0 FILEAPP ns6 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java">
  <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../DequeEDISignal.wsdl"/>
            <oracle-xsl-mapper:rootElement name="EDIOutboundFileBunch" namespace="http://www.sunpowercorp.com/Publish856n204OracleToEDICOM/EDIOutboundFileBunch/xsd/v1"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../DequeEDISignal.wsdl"/>
            <oracle-xsl-mapper:rootElement name="params" namespace="http://www.sunpowercorp.com/utilities/indexparams/xsdV1"/>
            <oracle-xsl-mapper:param name="indexVariable"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../WriteEDIFileToLocal.wsdl"/>
            <oracle-xsl-mapper:rootElement name="OrderDetails" namespace="http://www.sunpowercorp.com/Publish856n204OracleToEDICOM/EDI_204/xsd/v1"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <oracle-xsl-mapper:named-template-schema>
         <oracle-xsl-mapper:template name="string-replace">
            <oracle-xsl-mapper:mapSources/>
         </oracle-xsl-mapper:template>
      </oracle-xsl-mapper:named-template-schema>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.0.0(XSLT Build 151013.0700.0085) AT [WED OCT 05 15:31:17 CDT 2016].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="indexVariable"/>
  <xsl:template match="/">
    <xsl:variable name="index" select="number($indexVariable/ns4:params/ns4:Index)"/>
    <xsl:variable name="replace" select="'&quot;'"/>
   
    <ns2:OrderDetails>
      <xsl:for-each select="/ns1:EDIOutboundFileBunch/ns1:OrderDetails[$index]/ns1:OrderLines">
        <ns2:OrderLines>
          <ns2:Item>
            <xsl:value-of select="ns1:Item"/>
          </ns2:Item>
          <ns2:Item_Description>
          <xsl:variable name="Item_Description">
          
            <xsl:call-template name="string-replace">
              <xsl:with-param name="string" select="ns1:Item_Description"/>
              <xsl:with-param name="replace" select="$replace"/>
              <xsl:with-param name="with" select="&quot; &quot;"/>
            </xsl:call-template>
            </xsl:variable>
           
              <xsl:value-of select="concat('&quot;',$Item_Description,'&quot;')"/> 
          </ns2:Item_Description>
          <ns2:DELIVERY_NUMBER>
            <xsl:value-of select="ns1:DELIVERY_NUMBER"/>
          </ns2:DELIVERY_NUMBER>
          <ns2:Shipment_Date>
            <xsl:value-of select="xp20:format-dateTime(ns1:Shipment_Date,&quot;[M01]/[D01]/[Y0001]&quot;)"/>
          </ns2:Shipment_Date>
          <ns2:Expected_Delivery_Date>
            <xsl:value-of select="xp20:format-dateTime(ns1:Etd,&quot;[M01]/[D01]/[Y0001]&quot;)"/>
          </ns2:Expected_Delivery_Date>
          <ns2:SO>
            <xsl:value-of select="ns1:SO"/>
          </ns2:SO>
          <ns2:Line>
            <xsl:value-of select="ns1:Line"/>
          </ns2:Line>
          <ns2:Customer_PO>
            <xsl:value-of select="concat('&quot;',ns1:Customer_PO,'&quot;')"/>
          </ns2:Customer_PO>
          <ns2:Req_Qty>
            <xsl:value-of select="ns1:Req_Qty"/>
          </ns2:Req_Qty>
          <ns2:UOM>
            <xsl:value-of select="ns1:UOM"/>
          </ns2:UOM>
          <ns2:Shipped_Qty>
            <xsl:value-of select="ns1:Shipped_Qty"/>
          </ns2:Shipped_Qty>
          <ns2:Shipping_Instructions>
            <xsl:value-of select="concat('&quot;',ns1:Shipping_Instructions,'&quot;')"/>
          </ns2:Shipping_Instructions>
          <ns2:Packing_Instructions>
            <xsl:value-of select="concat('&quot;',ns1:Packing_Instructions,'&quot;')"/>
          </ns2:Packing_Instructions>
          <ns2:Feight_Method_Code>
            <xsl:value-of select="ns1:Feight_Method_Code"/>
          </ns2:Feight_Method_Code>
          <ns2:Ship_Method_Code>
            <xsl:value-of select="ns1:Ship_Method_Code"/>
          </ns2:Ship_Method_Code>
          <ns2:Carrier_Code>
            <xsl:value-of select="ns1:Carrier_Code"/>
          </ns2:Carrier_Code>
          <ns2:Shipping_WhereHouse>
            <xsl:value-of select="concat('&quot;',ns1:Shipping_WhereHouse,'&quot;')"/>
          </ns2:Shipping_WhereHouse>
          <ns2:Subinv>
            <xsl:value-of select="concat('&quot;',ns1:Subinv,'&quot;')"/>
          </ns2:Subinv>
          <ns2:Ship_Address1>
            <xsl:value-of select="concat('&quot;',ns1:Ship_Address1,'&quot;')"/>
          </ns2:Ship_Address1>
          <ns2:Ship_Address2>
            <xsl:value-of select="concat('&quot;',ns1:Ship_Address2,'&quot;')"/>
          </ns2:Ship_Address2>
          <ns2:Ship_Address3>
            <xsl:value-of select="concat('&quot;',ns1:Ship_Address3,'&quot;')"/>
          </ns2:Ship_Address3>
          <ns2:Ship_City>
            <xsl:value-of select="concat('&quot;',ns1:Ship_City,'&quot;')"/>
          </ns2:Ship_City>
          <ns2:Ship_Region>
            <xsl:value-of select="ns1:Ship_Region"/>
          </ns2:Ship_Region>
          <ns2:Ship_PostalCode>
            <xsl:value-of select="ns1:Ship_PostalCode"/>
          </ns2:Ship_PostalCode>
          <ns2:Ship_from_Country>
            <xsl:value-of select="concat('&quot;',ns1:Ship_from_Country,'&quot;')"/>
          </ns2:Ship_from_Country>
          <ns2:SHIP_TO_CUSTOMER_NAME>
            <xsl:value-of select="concat('&quot;',ns1:Ship_To_Customer_Name,'&quot;')"/>
          </ns2:SHIP_TO_CUSTOMER_NAME>
          <ns2:Ship_to_Address1>
            <xsl:value-of select="concat('&quot;',ns1:Ship_to_Address1,'&quot;')"/>
          </ns2:Ship_to_Address1>
          <ns2:Ship_to_Address2>
            <xsl:value-of select="concat('&quot;',ns1:Ship_to_Address2,'&quot;')"/>
          </ns2:Ship_to_Address2>
          <ns2:Ship_to_Address3>
            <xsl:value-of select="concat('&quot;',ns1:Ship_to_Address3,'&quot;')"/>
          </ns2:Ship_to_Address3>
          <ns2:Ship_to_City>
            <xsl:value-of select="concat('&quot;',ns1:Ship_to_City,'&quot;')"/>
          </ns2:Ship_to_City>
          <ns2:Ship_to_Region>
            <xsl:value-of select="ns1:Ship_to_Region"/>
          </ns2:Ship_to_Region>
          <ns2:Ship_to_Postal_Code>
            <xsl:value-of select="ns1:Ship_to_Postal_Code"/>
          </ns2:Ship_to_Postal_Code>
          <ns2:Ship_to_Country>
            <xsl:value-of select="concat('&quot;',ns1:Ship_to_Country,'&quot;')"/>
          </ns2:Ship_to_Country>
          <ns2:BillToAddress1>
            <xsl:value-of select="concat('&quot;',ns1:BillToAddress1,'&quot;')"/>
          </ns2:BillToAddress1>
          <ns2:BillToAddress2>
            <xsl:value-of select="concat('&quot;',ns1:BillToAddress2,'&quot;')"/>
          </ns2:BillToAddress2>
          <ns2:BillToAddress3>
            <xsl:value-of select="concat('&quot;',ns1:BillToAddress3,'&quot;')"/>
          </ns2:BillToAddress3>
          <ns2:BillToCity>
            <xsl:value-of select="concat('&quot;',ns1:BillToCity,'&quot;')"/>
          </ns2:BillToCity>
          <ns2:BillToRegion>
            <xsl:value-of select="ns1:BillToRegion"/>
          </ns2:BillToRegion>
          <ns2:BillToPostalcode>
            <xsl:value-of select="ns1:BillToPostalcode"/>
          </ns2:BillToPostalcode>
          <ns2:BillToCountry>
            <xsl:value-of select="concat('&quot;',ns1:BillToCountry,'&quot;')"/>
          </ns2:BillToCountry>
          <ns2:Waybill>
            <xsl:value-of select="ns1:Waybill"/>
          </ns2:Waybill>
          <ns2:VAT>
            <xsl:value-of select="ns1:VAT"/>
          </ns2:VAT>
          <ns2:OrderType>
            <xsl:value-of select="ns1:OrderType"/>
          </ns2:OrderType>
          <ns2:Blank_One>
            <xsl:text disable-output-escaping="no"/>
          </ns2:Blank_One>
          <ns2:Blank_Two>
            <xsl:text disable-output-escaping="no"/>
          </ns2:Blank_Two>
          <ns2:Blank_Three>
            <xsl:text disable-output-escaping="no"/>
          </ns2:Blank_Three>
          <ns2:Blank_Four>
            <xsl:text disable-output-escaping="no"/>
          </ns2:Blank_Four>
          <ns2:ShipmentPriority>
            <xsl:value-of select="ns1:ShipmentPriority"/>
          </ns2:ShipmentPriority>
          <ns2:Ship_To_Address_ID>
            <xsl:value-of select="ns1:Ship_To_Address_ID"/>
          </ns2:Ship_To_Address_ID>
          <ns2:PACKING_SLIP>
            <xsl:value-of select="ns1:PACKING_SLIP"/>
          </ns2:PACKING_SLIP>
          <ns2:ShipToContactName>
            <xsl:value-of select="concat('&quot;',ns1:ShipToContactName,'&quot;')"/>
          </ns2:ShipToContactName>
          <ns2:ShipToContactPhone>
            <xsl:value-of select="concat('&quot;',ns1:ShipToContactPhone,'&quot;')"/>
          </ns2:ShipToContactPhone>
          <ns2:HeaderAttachments>
            <xsl:value-of select="concat('&quot;',ns1:HeaderAttachments,'&quot;')"/>
          </ns2:HeaderAttachments>
          <ns2:ParentItemNumber>
            <xsl:value-of select="ns1:ParentItemNumber"/>
          </ns2:ParentItemNumber>
            <ns2:BOMQty>
            <xsl:value-of select="ns1:BOMQty"/>
          </ns2:BOMQty>        
           <ns2:Destination_Project_ID>
              <xsl:value-of select="ns1:Project_ID"/>
            </ns2:Destination_Project_ID>
            <ns2:Destination_Project_Name>
              <xsl:value-of select="ns1:Project_Name"/>
            </ns2:Destination_Project_Name>
        </ns2:OrderLines>
      </xsl:for-each>
    </ns2:OrderDetails>
  </xsl:template>
  <xsl:template name="string-replace">
    <xsl:param name="string"/>
    <xsl:param name="replace"/>
    <xsl:param name="with"/>
    <xsl:choose>
      <xsl:when test="contains($string, $replace)">
        <xsl:value-of select="substring-before($string, $replace)"/>
        <xsl:value-of select="$with"/>
        <xsl:call-template name="string-replace">
          <xsl:with-param name="string" select="substring-after($string,$replace)"/>
          <xsl:with-param name="replace" select="$replace"/>
          <xsl:with-param name="with" select="$with"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$string"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>