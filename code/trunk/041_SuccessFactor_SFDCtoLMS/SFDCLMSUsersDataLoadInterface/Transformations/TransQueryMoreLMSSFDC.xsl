<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="2.0" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:ens="urn:sobject.partner.soap.sforce.com" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fns="urn:fault.partner.soap.sforce.com" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns0="http://www.sunpowercorp.com/MergeLmsRows" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:tns="urn:partner.soap.sforce.com" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl ens fns xsd soap tns ns0 bpws xp20 mhdr bpel oraext dvm hwf med ids bpm xdk xref ora socket ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas">
  <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/partner.wsdl"/>
            <oracle-xsl-mapper:rootElement name="queryMoreResponse" namespace="urn:partner.soap.sforce.com"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/MergedLMSData.xsd"/>
            <oracle-xsl-mapper:rootElement name="MergeLmsRowsCollection" namespace="http://www.sunpowercorp.com/MergeLmsRows"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <oracle-xsl-mapper:named-template-schema>
         <oracle-xsl-mapper:template name="Tokenize">
            <oracle-xsl-mapper:mapSources/>
         </oracle-xsl-mapper:template>
      </oracle-xsl-mapper:named-template-schema>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.0.0(XSLT Build 151013.0700.0085) AT [SAT OCT 08 16:55:14 IST 2016].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
    <ns0:MergeLmsRowsCollection>
      <xsl:for-each select="/tns:queryMoreResponse/tns:result/tns:records">
     <xsl:variable name="pos" select="position()"/>
        <xsl:variable name="Tokens">
          <xsl:call-template name="Tokenize">
            <xsl:with-param name="input" select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:LMS_Job_ID__c"/>
          </xsl:call-template>
        </xsl:variable>
        <ns0:MergeLmsRowsItems>
          <xsl:choose>
           <xsl:when test="(((/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Portal_User_Type__c = &quot;LMS Only User&quot;) and (/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Terminated__c = &quot;true&quot;)) or             ((/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Portal_User_Type__c = &quot;SFDC User&quot;) and (/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:IsActive = &quot;false&quot;)) or (/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:status__c = &quot;Terminated&quot;))">
              <ns0:not_active>
                <xsl:text disable-output-escaping="no">Y</xsl:text>
              </ns0:not_active>
               </xsl:when>
          <xsl:when test="(((/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Portal_User_Type__c = &quot;LMS Only User&quot;) and (/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Terminated__c = &quot;false&quot;)) or            ((/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Portal_User_Type__c = &quot;SFDC User&quot;) and (/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:IsActive = &quot;true&quot;)))">
              <ns0:not_active>
                <xsl:text disable-output-escaping="no">N</xsl:text>
              </ns0:not_active>
               </xsl:when>
                </xsl:choose>
          <!--
         <xsl:when test='/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:status__c = "Terminated"'>
              <ns0:not_active>
                <xsl:text disable-output-escaping="no">Y</xsl:text>
              </ns0:not_active>
            </xsl:when>
            <xsl:when test='(/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Portal_User_Type__c = "LMS Only User") and (/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Terminated__c = "true")'>
              <ns0:not_active>
                <xsl:text disable-output-escaping="no">Y</xsl:text>
              </ns0:not_active>
               </xsl:when>
                <xsl:when test='(/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Portal_User_Type__c = "LMS Only User") and (/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Terminated__c = "false")'>
              <ns0:not_active>
                <xsl:text disable-output-escaping="no">N</xsl:text>
              </ns0:not_active>
               </xsl:when>
            <xsl:when test='(/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Portal_User_Type__c = "SFDC User") and (/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:IsActive = "false")'>
              <ns0:not_active>
                <xsl:text disable-output-escaping="no">Y</xsl:text>
              </ns0:not_active>
            </xsl:when>
            <xsl:when test='(/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Portal_User_Type__c = "SFDC User") and (/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:IsActive = "true")'>
              <ns0:not_active>
                <xsl:text disable-output-escaping="no">N</xsl:text>
              </ns0:not_active>
            </xsl:when>
            -->
            
          <ns0:user_id>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Plateau_Id__c"/>
          </ns0:user_id>
          <ns0:first_name>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:FirstName"/>
          </ns0:first_name>
          <ns0:last_name>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:LastName"/>
          </ns0:last_name>
          <ns0:job_position_id>
            <xsl:value-of select="$Tokens/ns0:Tag[1.0]"/>
          </ns0:job_position_id>
          <ns0:job_position_description>
            <xsl:value-of select="$Tokens/ns0:Tag[1.0]"/>
          </ns0:job_position_description>
          <ns0:role>
            <xsl:text disable-output-escaping="no">VAR USER</xsl:text>
          </ns0:role>
          <ns0:domain_id>
            <xsl:value-of select="dvm:lookupValue(&quot;DomainID.dvm&quot;,&quot;KeyColumn&quot;,/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Country_Domain__c,&quot;ValueColumn&quot;,&quot;VAR-NA&quot;)"/>
          </ns0:domain_id>
          <ns0:organization_id>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:AccountNumber"/>
          </ns0:organization_id>
          <ns0:organization_description>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:Name"/>
          </ns0:organization_description>
          <ns0:state>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:BillingState"/>
          </ns0:state>
           <ns0:country>
             <xsl:value-of select="dvm:lookupValue(&quot;Country.dvm&quot;,&quot;SFDC&quot;,/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:BillingCountry,&quot;LMS&quot;,&quot;&quot;)"/>
          </ns0:country>
          <ns0:region_id>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:Territory__c"/>
          </ns0:region_id>
          <ns0:region_description>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:Territory__c"/>
          </ns0:region_description>
          <ns0:email_address>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Email"/>
          </ns0:email_address>
          <ns0:hired_date>
            <xsl:value-of select="xp20:format-dateTime(/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:Authorized_Partner_Date__c,&quot;[MN,*-3]-[D01]-[Y0001] [H01]:[m01]:[s01]&quot;)"/>
          </ns0:hired_date>
          <ns0:supervisor>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:LMS_Supervisor_ID__c"/>
          </ns0:supervisor>
          <ns0:account_code>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:Integration_ID__c"/>
          </ns0:account_code>
         
          <ns0:phone_number_i>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Phone"/>
          </ns0:phone_number_i>
          <ns0:phone_number_description_i>
            <xsl:text disable-output-escaping="no">Primary</xsl:text>
          </ns0:phone_number_description_i>
          <ns0:phone_number_ii>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:MobilePhone"/>
          </ns0:phone_number_ii>
          <ns0:phone_number_description_ii>
            <xsl:text disable-output-escaping="no">mobile</xsl:text>
          </ns0:phone_number_description_ii>
          <ns0:phone_number_iii>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:HomePhone"/>
          </ns0:phone_number_iii>
          <ns0:phone_number_description_iii>
            <xsl:text disable-output-escaping="no">home</xsl:text>
          </ns0:phone_number_description_iii>
          <ns0:alternate_job_position_id>
            <xsl:value-of select="$Tokens/ns0:Tag[2.0]"/>
          </ns0:alternate_job_position_id>
        
          <ns0:shopping_account_type>
            <xsl:text disable-output-escaping="no">EXTERNAL</xsl:text>
          </ns0:shopping_account_type>
        
            <ns0:custom_column_100>
            <xsl:value-of select="dvm:lookupValue(&quot;Authorize100.dvm&quot;,&quot;KeyColumn&quot;,/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:Type,&quot;ValueColumn&quot;,&quot;&quot;)"/>
          </ns0:custom_column_100>
          <ns0:custom_column_110>
            <xsl:value-of select="dvm:lookupValue(&quot;Combo100.dvm&quot;,&quot;KeyColumn&quot;,/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:Account/ens:Type,&quot;ValueColumn&quot;,&quot;&quot;)"/>
          </ns0:custom_column_110>
          <ns0:enable_shopping_account>
                              <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:LMS_Role__c"/>
          </ns0:enable_shopping_account>
          <ns0:custom_column_120>
            <xsl:value-of select="dvm:lookupValue(&quot;LMSRoleMap.dvm&quot;,&quot;KeyColumn&quot;,/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:LMS_Role__c,&quot;ValueColumn&quot;,&quot;&quot;)"/>
          </ns0:custom_column_120>
          <ns0:timezone>
            <xsl:value-of select="dvm:lookupValue(&quot;TimeZone.dvm&quot;,&quot;KeyColumn&quot;,/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Country_Domain__c,&quot;ValueColumn&quot;,&quot;&quot;)"/>
          </ns0:timezone>
          <ns0:language_id>
            <xsl:value-of select="dvm:lookupValue(&quot;LMSLanguages.dvm&quot;,&quot;KeyColumn&quot;,substring(/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:LanguageLocaleKey,0.0,3.0),&quot;ValueColumn&quot;,&quot;English&quot;)"/>
          </ns0:language_id>
          <ns0:alt_job_position_id2>
            <xsl:value-of select="$Tokens/ns0:Tag[3.0]"/>
          </ns0:alt_job_position_id2>
          <ns0:alt_job_position_id3>
            <xsl:value-of select="$Tokens/ns0:Tag[4.0]"/>
          </ns0:alt_job_position_id3>
          <ns0:alt_job_position_id4>
            <xsl:value-of select="$Tokens/ns0:Tag[5.0]"/>
          </ns0:alt_job_position_id4>
          <ns0:alt_job_position_id5>
            <xsl:value-of select="$Tokens/ns0:Tag[5.0]"/>
          </ns0:alt_job_position_id5>
          <ns0:alt_job_position_id6>
            <xsl:value-of select="$Tokens/ns0:Tag[6.0]"/>
          </ns0:alt_job_position_id6>
          <ns0:end_of_row>
            <xsl:value-of select="/tns:queryMoreResponse/tns:result/tns:records[$pos]/ens:Contact/ens:AccountId"/>
          </ns0:end_of_row>
        </ns0:MergeLmsRowsItems>
      </xsl:for-each>
    </ns0:MergeLmsRowsCollection>
  </xsl:template> <!--  User Defined Templates  --> <xsl:template name="Tokenize">
    <xsl:param name="input"/>
    <xsl:choose>
      <xsl:when test="contains($input,';')">
        <ns0:Tag>
          <xsl:value-of select="substring-before($input,';')"/>
        </ns0:Tag>
        <xsl:call-template name="Tokenize">
          <xsl:with-param name="input" select="substring-after($input,';')"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <ns0:Tag>
          <xsl:value-of select="$input"/>
        </ns0:Tag>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>