<?xml version = '1.0' encoding = 'UTF-8'?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Thu Sep 27 17:25:25 IST 2012
  Author:  va35739
  Type: BPEL 1.1 Process
  Purpose: One Way BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
--><process name="ACBGetAllPriorApprovalsmergeReq_BPEL" targetNamespace="http://www.sunpowercorp.com/MarketingNTrainingActAppClmACBToSFDC/ACBGetAllPriorApprovalsmergeReq/ACBGetAllPriorApprovalsmergeReq_BPEL" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:client="http://www.sunpowercorp.com/MarketingNTrainingActAppClmACBToSFDC/ACBGetAllPriorApprovalsmergeReq/ACBGetAllPriorApprovalsmergeReq_BPEL" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ns1="http://www.acbcoop.com/" xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:ns2="http://www.sunpowercorp.com/ACBClaimAll/" xmlns:ns3="http://xmlns.oracle.com/testingapplication/CommonSFDCErrorLogService/CallCommSFDCErrMediator" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns4="http://www.sunpowercorp.com/SOAUtilityServices/CommonSFDCErrorLogService/CommonSFDCErrorLogService_BPEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns5="http://CustFault/Fault/Business" id="BpPrc0">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <bpelx:annotation>
    <bpelx:analysis>
      <bpelx:property name="wsdlFile">
        ACBGetAllPriorApprovalsmergeReq_BPEL.wsdl
      </bpelx:property>
    </bpelx:analysis>
  </bpelx:annotation>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="acbgetallpriorapprovalsmergereq_bpel_client" partnerLinkType="client:ACBGetAllPriorApprovalsmergeReq_BPEL" myRole="ACBGetAllPriorApprovalsmergeReq_BPELProvider"/>
    <partnerLink name="ACBApproverAllService" partnerLinkType="ns1:ACBApproverAllService" partnerRole="DataStoreSoap"/>
    <partnerLink name="ACBGetAllPriorApSvcConfigalsmergeOSB" partnerLinkType="ns2:ACBGetAllPriorApSvcConfigalsmergeOSB" partnerRole="ACBClaimAll"/>
    <partnerLink name="CommonSFDCErrorLogService" partnerLinkType="ns3:CommonSFDCErrorLogService" partnerRole="execute_ptt"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:ACBGetAllPriorApprovalsmergeReq_BPELRequestMessage"/>
    <variable name="InvACBApproverAllService_IV" messageType="ns1:GetAllPriorApprovalDetailsSoapIn"/>
    <variable name="InvACBApproverAllService_OV" messageType="ns1:GetAllPriorApprovalDetailsSoapOut"/>
    <variable name="InvACBGetAllPriorApSvcConfigalsmergeOSB_IV" messageType="ns2:ACBClaimAllRequest"/>
    <variable name="InvACBGetAllPriorApSvcConfigalsmergeOSB_OV" messageType="ns2:ACBClaimAllResponse"/>
    <variable name="InvCommonSFDCErrorLogService_IV" messageType="ns3:requestMessage"/>
                <variable name="CommErr" messageType="ns3:requestMessage"/>
    <variable name="SetTitle" type="xsd:string"/>
    <variable messageType="bpelx:RuntimeFaultMessage" name="CustomFault"/>
  </variables>
  <faultHandlers id="BpFhs0">
    <catchAll id="BpCAl0">
      <sequence name="Sequence1" id="BpSeq0">
         <assign name="AsgnCommonErrorHandler" id="BpAss0">
          <copy>
            <from expression="ora:getCompositeInstanceId()"/>
            <to variable="CommErr" part="request" query="/ns4:CommonSFDCErrorLog/ns4:CommonErrorHandlerInputDetails/ns4:InstanceNumber"/>
          </copy>
          <copy>
            <from expression="ora:getPreference(&quot;Severity&quot;)"/>
            <to variable="CommErr" part="request" query="/ns4:CommonSFDCErrorLog/ns4:CommonErrorHandlerInputDetails/ns4:Severity"/>
          </copy>
          <copy>
            <from expression="ora:getPreference(&quot;InterfaceNum&quot;)"/>
            <to variable="CommErr" part="request" query="/ns4:CommonSFDCErrorLog/ns4:CommonErrorHandlerInputDetails/ns4:InterfaceNumber"/>
          </copy>
          <copy>
            <from expression="ora:getFaultAsString()"/>
            <to variable="CommErr" part="request" query="/ns4:CommonSFDCErrorLog/ns4:CommonErrorHandlerInputDetails/ns4:Fault/ns4:FaultDescription"/>
          </copy>
          <copy>
            <from expression="ora:getFaultName()"/>
            <to variable="CommErr" part="request" query="/ns4:CommonSFDCErrorLog/ns4:CommonErrorHandlerInputDetails/ns4:Fault/ns4:FaultMessage"/>
          </copy>
          <copy>
            <from expression="ora:getPreference(&quot;FaultCode&quot;)"/>
            <to variable="CommErr" part="request" query="/ns4:CommonSFDCErrorLog/ns4:CommonErrorHandlerInputDetails/ns4:Fault/ns4:FaultCode"/>
          </copy>
          <copy>
            <from expression="ora:getPreference(&quot;InterfaceName&quot;)"/>
            <to variable="CommErr" part="request" query="/ns4:CommonSFDCErrorLog/ns4:CommonErrorHandlerInputDetails/ns4:InterfaceName"/>
          </copy>
          <copy>
            <from expression="ora:getPreference(&quot;ProcessName&quot;)"/>
            <to variable="CommErr" part="request" query="/ns4:CommonSFDCErrorLog/ns4:CommonErrorHandlerInputDetails/ns4:ProcessName"/>
          </copy>
          <copy>
            <from expression="ora:getPreference(&quot;FaultSystemName&quot;)"/>
            <to variable="CommErr" part="request" query="/ns4:CommonSFDCErrorLog/ns4:CommonErrorHandlerInputDetails/ns4:FaultSystemName"/>
          </copy>
          <copy>
            <from expression="ora:getPreference(&quot;bOpenServiceTicket&quot;)"/>
            <to variable="CommErr" part="request" query="/ns4:CommonSFDCErrorLog/ns4:CommonErrorHandlerInputDetails/ns4:bOpenServiceTicket"/>
          </copy>
            <copy>
            <from expression="ora:getPreference(&quot;SendEmail&quot;)"/>
            <to variable="CommErr" part="request" query="/ns4:CommonSFDCErrorLog/ns4:CommonErrorHandlerInputDetails/ns4:SendEmail"/>
          </copy>
        </assign>
        <assign name="TransformErrLog" id="BpAss1">
          <bpelx:annotation>
            <bpelx:pattern>transformation</bpelx:pattern>
          </bpelx:annotation>
          <copy>
            <from expression="ora:doXSLTransformForDoc('Transformations/TransformErrLogParms.xsl', $CommErr.request, 'InvACBApproverAllService_OV.parameters', $InvACBApproverAllService_OV.parameters)"/>
            <to variable="InvCommonSFDCErrorLogService_IV" part="request"/>
          </copy>
        </assign>
        <invoke name="InvCommonSFDCErrorLogService" bpelx:invokeAsDetail="no" inputVariable="InvCommonSFDCErrorLogService_IV" partnerLink="CommonSFDCErrorLogService" portType="ns3:execute_ptt" operation="execute" id="BpInv0"/>
        <terminate name="Terminate" id="BpTer0"/>
      </sequence>
    </catchAll>
  </faultHandlers>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main" id="BpSeq1">

    <!-- Receive input from requestor. (Note: This maps to operation defined in ACBGetAllPriorApprovalsmergeReq_BPEL.wsdl) -->
    <receive name="receiveInput" partnerLink="acbgetallpriorapprovalsmergereq_bpel_client" portType="client:ACBGetAllPriorApprovalsmergeReq_BPEL" operation="process" variable="inputVariable" createInstance="yes" id="BpRcv0"/>
    <assign name="AssignSetTitle" id="BpAss2">
      <copy>
        <from expression="&quot;ACBGetPriorApprovalMerge&quot;"/>
        <to variable="SetTitle"/>
      </copy>
      <copy>
        <from expression="oraext:setFlowInstanceTitle(concat('Req:',bpws:getVariableData('SetTitle')))"/>
        <to variable="SetTitle"/>
      </copy>
    </assign>
    <invoke name="InvACBApproverAllService" bpelx:invokeAsDetail="no" inputVariable="InvACBApproverAllService_IV" outputVariable="InvACBApproverAllService_OV" partnerLink="ACBApproverAllService" portType="ns1:DataStoreSoap" operation="GetAllPriorApprovalDetails" id="BpInv1"/>
    <switch name="Switch1" id="BpSwt0">
      <case condition="count(bpws:getVariableData('InvACBApproverAllService_OV','parameters','/ns1:GetAllPriorApprovalDetailsResponse/ns1:GetAllPriorApprovalDetailsResult/ns1:WebServicePAs')) > 0">
        <sequence id="BpSeq2">
          <assign name="TransformOSBParms" id="BpAss3">
            <bpelx:annotation>
              <bpelx:pattern>transformation</bpelx:pattern>
            </bpelx:annotation>
            <copy>
              <from expression="ora:doXSLTransformForDoc('Transformations/TransformOSBParms.xsl', $InvACBApproverAllService_OV.parameters)"/>
              <to variable="InvACBGetAllPriorApSvcConfigalsmergeOSB_IV" part="payload"/>
            </copy>
          </assign>
          <invoke name="InvACBGetAllPriorApSvcConfigalsmergeOSB" bpelx:invokeAsDetail="no" inputVariable="InvACBGetAllPriorApSvcConfigalsmergeOSB_IV" outputVariable="InvACBGetAllPriorApSvcConfigalsmergeOSB_OV" partnerLink="ACBGetAllPriorApSvcConfigalsmergeOSB" portType="ns2:ACBClaimAll" operation="ACBClaimAll" id="BpInv2"/>
        </sequence>
      </case>
      <otherwise>
        <sequence name="Sequence3" id="BpSeq3">
         <assign name="AssignFault" id="BpAss4">
            <copy>
              <from expression="'MDTF103RL'"/>
              <to variable="CustomFault" part="code"/>
            </copy>
            <copy>
              <from expression="&quot;No Records Found&quot;"/>
              <to variable="CustomFault" part="summary"/>
            </copy>
            <copy>
              <from expression="&quot;ACBApprovalsMergeBusinessFault&quot;"/>
              <to variable="CustomFault" part="detail"/>
            </copy>
          </assign>
          <throw name="ThrowNoRcrdsBF" faultName="ns5:BusinessFault" faultVariable="CustomFault" id="BpThw0"/>
        </sequence>
      </otherwise>
    </switch>
  </sequence>
</process>