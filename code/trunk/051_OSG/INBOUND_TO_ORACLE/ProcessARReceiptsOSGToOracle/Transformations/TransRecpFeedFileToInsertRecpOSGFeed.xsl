<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:top="http://xmlns.oracle.com/pcbpel/adapter/db/top/InsertReceiptOSGFeed" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/OSG/ProcessARReceiptsOSGToOracle/InsertReceiptOSGFeed" xmlns:pc="http://xmlns.oracle.com/pcbpel/" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/file/OSG/ProcessARReceiptsOSGToOracle/PollOSGReceiptsFeedFile" xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:imp1="http://TargetNamespace.com/InboundService" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl pc tns plt imp1 wsdl jca xsd top ns0 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/PollOSGReceiptsFeedFile.wsdl"/>
            <oracle-xsl-mapper:rootElement name="OSGRECP" namespace="http://TargetNamespace.com/InboundService"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/InsertReceiptOSGFeed.wsdl"/>
            <oracle-xsl-mapper:rootElement name="XxspwrArOsgRcpInboundCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/InsertReceiptOSGFeed"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <oracle-xsl-mapper:named-template-schema>
         <oracle-xsl-mapper:template name="GetDate">
            <oracle-xsl-mapper:mapSources/>
         </oracle-xsl-mapper:template>
      </oracle-xsl-mapper:named-template-schema>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.0.0(XSLT Build 151013.0700.0085) AT [THU OCT 06 18:52:50 IST 2016].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
    <top:XxspwrArOsgRcpInboundCollection>
      <xsl:for-each select="/imp1:OSGRECP/imp1:OSGRECPFEED">
        <top:XxspwrArOsgRcpInbound>
          <top:sequenceId>
            <xsl:value-of select="oraext:sequence-next-val(&quot;XXSPWR.XXSPWR_OSG_RCPT_INBOUND_SEQ&quot;,&quot;jdbc/FusionConnection&quot;)"/>
          </top:sequenceId>
          <top:transactionName>
            <xsl:text disable-output-escaping="no">INVOICE</xsl:text>
          </top:transactionName>
          <top:trxNumber>
            <xsl:value-of select="imp1:TRX_NUMBER"/>
          </top:trxNumber>
          <top:customerTrxId>
            <xsl:value-of select="imp1:CUSTOMER_TRX_ID"/>
          </top:customerTrxId>
          <xsl:choose>
            <xsl:when test="string-length(imp1:TRX_DATE) > number(0.0)">
              <top:trxDate>
                <xsl:call-template name="GetDate">
                  <xsl:with-param name="date" select="/imp1:OSGRECP/imp1:OSGRECPFEED/imp1:TRX_DATE"/>
                </xsl:call-template>
              </top:trxDate>
            </xsl:when>
            <xsl:otherwise>
              <top:trxDate>
                <xsl:text disable-output-escaping="no"/>
              </top:trxDate>
            </xsl:otherwise>
          </xsl:choose>
          <top:customerName>
            <xsl:value-of select="imp1:CUSTOMER_NAME"/>
          </top:customerName>
          <top:accountNumber>
            <xsl:value-of select="imp1:ACCOUNT_NUMBER"/>
          </top:accountNumber>
          <top:emailAddress>
            <xsl:value-of select="imp1:EMAIL_ADDRESS"/>
          </top:emailAddress>
          <top:invoiceAmount>
            <xsl:value-of select="imp1:INVOICE_AMOUNT"/>
          </top:invoiceAmount>
          <top:accountPaymentAmount>
            <xsl:value-of select="imp1:ACCOUNT_PAYMENT_AMOUNT"/>
          </top:accountPaymentAmount>
          <xsl:choose>
            <xsl:when test="string-length(imp1:PAYMENT_DATE) > number(0.0)">
              <top:paymentDate>
                <xsl:call-template name="GetDate">
                  <xsl:with-param name="date" select="/imp1:OSGRECP/imp1:OSGRECPFEED/imp1:PAYMENT_DATE"/>
                </xsl:call-template>
              </top:paymentDate>
            </xsl:when>
            <xsl:otherwise>
              <top:paymentDate>
                <xsl:text disable-output-escaping="no"/>
              </top:paymentDate>
            </xsl:otherwise>
          </xsl:choose>
          <top:paymentType>
            <xsl:value-of select="imp1:PAYMENT_TYPE"/>
          </top:paymentType>
          <top:paymentSubType>
            <xsl:value-of select="imp1:PAYMENT_SUB_TYPE"/>
          </top:paymentSubType>
          <top:last4>
            <xsl:value-of select="imp1:LAST4"/>
          </top:last4>
          <top:authorizationCode>
            <xsl:value-of select="imp1:AUTHORIZATION_CODE"/>
          </top:authorizationCode>
          <top:billerCode>
            <xsl:value-of select="imp1:BILLER_CODE"/>
          </top:billerCode>
          <top:transactionAmount>
            <xsl:value-of select="imp1:TRANSACTION_AMOUNT"/>
          </top:transactionAmount>
          <top:merchantCode>
            <xsl:value-of select="imp1:MERCHANT_CODE"/>
          </top:merchantCode>
          <top:notes>
            <xsl:value-of select="imp1:NOTES"/>
          </top:notes>
          <top:soaStatus>
            <xsl:text disable-output-escaping="no">NEW</xsl:text>
          </top:soaStatus>
          <top:status>
            <xsl:text disable-output-escaping="no">NEW</xsl:text>
          </top:status>
          <top:creationDate>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </top:creationDate>
          <top:createdBy>
            <xsl:text disable-output-escaping="no">-99</xsl:text>
          </top:createdBy>
          <top:lastUpdateDate>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </top:lastUpdateDate>
          <top:lastUpdatedBy>
            <xsl:text disable-output-escaping="no">-99</xsl:text>
          </top:lastUpdatedBy>
        </top:XxspwrArOsgRcpInbound>
      </xsl:for-each>
    </top:XxspwrArOsgRcpInboundCollection>
  </xsl:template> <!--  User Defined Templates  --> <xsl:template name="GetDate">
    <xsl:param name="date"/>
    <xsl:choose>
      <xsl:when test="string-length($date)=7">
        <xsl:variable name="month" select="substring-before($date, '/')"/>
        <xsl:variable name="year" select="substring-after($date, '/')"/>
        <xsl:value-of select="concat($year,'-',$month,'-01')"/>
      </xsl:when>
      <xsl:when test="string-length($date)&lt;7">
        <xsl:variable name="month" select="substring-before($date, '/')"/>
        <xsl:variable name="year" select="substring-after($date, '/')"/>
        <xsl:value-of select="concat($year,'-','0',$month,'-01')"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:variable name="month" select="substring-before($date, '/')"/>
        <xsl:variable name="tmp" select="substring-after($date, '/')"/>
        <xsl:variable name="day" select="substring-before($tmp, '/')"/>
        <xsl:variable name="year" select="substring-after($tmp, '/')"/>
        <xsl:choose>
          <xsl:when test="number($month)&lt;9 and string-length($month)&lt;2 ">
            <xsl:value-of select="concat($year,'-','0',$month,'-')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($year,'-',$month,'-')"/>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="number($day)&lt;9 and string-length($day)&lt;2">
            <xsl:value-of select="concat('0',$day)"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$day"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>