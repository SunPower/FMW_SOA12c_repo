<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pc="http://xmlns.oracle.com/pcbpel/" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/file/DEV/ProcessARReceiptReversalOSGToOracle/PollOSGReceiptReversalFeedFile" xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns1="http://www.sunpowercorp.com/SunPowerDevelopment/initParams/xsd/v1" xmlns:top="http://xmlns.oracle.com/pcbpel/adapter/db/top/InsertReceiptReversalOSGFeed" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/DEV/ProcessARReceiptReversalOSGToOracle/InsertReceiptReversalOSGFeed" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:imp1="http://www.sunpowercorp.com/PollOSGReceiptReversalFeedFile" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl pc tns plt wsdl jca imp1 xsd top ns0 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas">
  <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/PollOSGReceiptReversalFeedFile.wsdl"/>
            <oracle-xsl-mapper:rootElement name="OSGReversalFeedItems" namespace="http://www.sunpowercorp.com/PollOSGReceiptReversalFeedFile"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDLs/InsertReceiptReversalOSGFeed.wsdl"/>
            <oracle-xsl-mapper:rootElement name="XxspwrArOsgRevInboundCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/InsertReceiptReversalOSGFeed"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <oracle-xsl-mapper:named-template-schema>
         <oracle-xsl-mapper:template name="GetDate">
            <oracle-xsl-mapper:mapSources/>
         </oracle-xsl-mapper:template>
      </oracle-xsl-mapper:named-template-schema>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.0.0(XSLT Build 151013.0700.0085) AT [THU OCT 06 18:41:46 IST 2016].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
    <top:XxspwrArOsgRevInboundCollection>
      <xsl:for-each select="/imp1:OSGReversalFeedItems/imp1:OSGReversalFeed">
        <top:XxspwrArOsgRevInbound>
          <top:sequenceId>
            <xsl:value-of select="oraext:sequence-next-val(&quot;XXSPWR.XXSPWR_OSG_RCPT_INBOUND_SEQ&quot;,&quot;jdbc/FusionConnection&quot;)"/>
          </top:sequenceId>
          <top:transactionName>
            <xsl:text disable-output-escaping="no">REVERSE</xsl:text>
          </top:transactionName>
          <top:trxNumber>
            <xsl:value-of select="imp1:InvoiceNumber"/>
          </top:trxNumber>
          <xsl:if test="imp1:TRX_DATE != &quot;&quot;">
            <top:trxDate>
              <xsl:call-template name="GetDate">
                <xsl:with-param name="date" select="/imp1:OSGReversalFeedItems/imp1:OSGReversalFeed/imp1:PaymentDate"/>
              </xsl:call-template>
            </top:trxDate>
          </xsl:if>
          <top:customerName>
            <xsl:value-of select="imp1:AccountName"/>
          </top:customerName>
          <top:accountNumber>
            <xsl:value-of select="imp1:AccountNumber"/>
          </top:accountNumber>
          <top:invoiceAmount>
            <xsl:value-of select="imp1:AppliedPaymentAmount"/>
          </top:invoiceAmount>
          <top:receiptAmount>
            <xsl:value-of select="imp1:PaymentAmount"/>
          </top:receiptAmount>
          <xsl:if test="imp1:PAYMENT_DATE != &quot;&quot;">
            <top:paymentDate>
              <xsl:call-template name="GetDate">
                <xsl:with-param name="date" select="/imp1:OSGReversalFeedItems/imp1:OSGReversalFeed/imp1:PaymentDate"/>
              </xsl:call-template>
            </top:paymentDate>
          </xsl:if>
          <top:paymentType>
            <xsl:value-of select="imp1:AccountType"/>
          </top:paymentType>
          <top:paymentSubType>
            <xsl:value-of select="imp1:AccountSubType"/>
          </top:paymentSubType>
          <xsl:if test="imp1:REVERSAL_DATE != &quot;&quot;">
            <top:reversalDate>
              <xsl:call-template name="GetDate">
                <xsl:with-param name="date" select="/imp1:OSGReversalFeedItems/imp1:OSGReversalFeed/imp1:ReturnDate"/>
              </xsl:call-template>
            </top:reversalDate>
          </xsl:if>
          <top:reversalReason>
            <xsl:value-of select="imp1:ReturnReason"/>
          </top:reversalReason>
          <top:last4>
            <xsl:value-of select="imp1:Last4"/>
          </top:last4>
          <xsl:if test="imp1:REQUESTED_TIMESTAMP != &quot;&quot;">
            <top:requestedTimestamp>
              <xsl:call-template name="GetDate">
                <xsl:with-param name="date" select="/imp1:OSGReversalFeedItems/imp1:OSGReversalFeed/imp1:RequestedTimestamp"/>
              </xsl:call-template>
            </top:requestedTimestamp>
          </xsl:if>
          <top:authorizationCode>
            <xsl:value-of select="string(imp1:AuthorizationCode)"/>
          </top:authorizationCode>
          <top:billerCode>
            <xsl:value-of select="imp1:BillerCode"/>
          </top:billerCode>
          <top:merchantCode>
            <xsl:value-of select="imp1:MerchantCode"/>
          </top:merchantCode>
          <top:notes>
            <xsl:value-of select="imp1:Notes"/>
          </top:notes>
          <top:soaStatus>
            <xsl:text disable-output-escaping="no">NEW</xsl:text>
          </top:soaStatus>
          <top:status>
            <xsl:text disable-output-escaping="no">NEW</xsl:text>
          </top:status>
          <top:creationDate>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </top:creationDate>
          <top:createdBy>
            <xsl:text disable-output-escaping="no">-99</xsl:text>
          </top:createdBy>
          <top:lastUpdateDate>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </top:lastUpdateDate>
          <top:lastUpdatedBy>
            <xsl:text disable-output-escaping="no">-99</xsl:text>
          </top:lastUpdatedBy>
        </top:XxspwrArOsgRevInbound>
      </xsl:for-each>
    </top:XxspwrArOsgRevInboundCollection>
  </xsl:template>
  <!--  User Defined Templates  -->
  <xsl:template name="GetDate">
    <xsl:param name="date"/>
    <xsl:choose>
      <xsl:when test="string-length($date)=7">
        <xsl:variable name="month" select="substring-before($date, '/')"/>
        <xsl:variable name="year" select="substring-after($date, '/')"/>
        <xsl:value-of select="concat($year,'-',$month,'-01')"/>
      </xsl:when>
      <xsl:when test="string-length($date)&lt;7">
        <xsl:variable name="month" select="substring-before($date, '/')"/>
        <xsl:variable name="year" select="substring-after($date, '/')"/>
        <xsl:value-of select="concat($year,'-','0',$month,'-01')"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:variable name="month" select="substring-before($date, '/')"/>
        <xsl:variable name="tmp" select="substring-after($date, '/')"/>
        <xsl:variable name="day" select="substring-before($tmp, '/')"/>
        <xsl:variable name="year" select="substring-after($tmp, '/')"/>
        <xsl:choose>
          <xsl:when test="number($month)&lt;9 and string-length($month)&lt;2 ">
            <xsl:value-of select="concat($year,'-','0',$month,'-')"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="concat($year,'-',$month,'-')"/>
          </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
          <xsl:when test="number($day)&lt;9 and string-length($day)&lt;2">
            <xsl:value-of select="concat('0',$day)"/>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$day"/>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>