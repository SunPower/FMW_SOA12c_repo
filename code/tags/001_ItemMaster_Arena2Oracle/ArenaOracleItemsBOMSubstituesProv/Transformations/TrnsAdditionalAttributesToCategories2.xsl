<?xml version = '1.0' encoding = 'UTF-8'?>
<xsl:stylesheet version="1.0" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns3="http://www.sunpowercorp.com/ArenaOracleItemsBOMSubstituesProv/xsd/OrgAssignments/V1" xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:ns8="http://www.sunpowercorp.com/Common/ArenaOracleDataFeedDetailsCommonTypes/V1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ns0="http://www.sunpowercorp.com/Verb/VerbCommonTypes/V1" xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns5="http://www.sunpowercorp.com/ArenaOracleItemsBOMSubstituesProv/xsd/Categories/V1" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:client="http://www.sunpowercorp.com/SunPowerDevelopment/ArenaOracleItemsBOMSubstituesProv/ArenaOracleItemsBOMSubstituesProv_BPEL" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns4="http://www.sunpowercorp.com/ArenaOracleItemsBOMSubstituesProv/xsd/ListOfVendorsArenaAsls/V1" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:ns7="http://www.sunpowercorp.com/Common/CommonDataTypes/V1" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:ns2="http://www.sunpowercorp.com/ArenaOracleItemsBOMSubstituesProv/xsd/defaultParams/V1" xmlns:med="http://schemas.oracle.com/mediator/xpath" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:ns1="http://www.sunpowercorp.com/BOD/ProcessArenaOracleDataFeed/V1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns6="http://schemas.oracle.com/bpel/extension" xmlns:ns9="http://www.sunpowercorp.com/Noun/ArenaOracleDataFeed/V1" xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap" exclude-result-prefixes="xsi xsl ns3 ns8 ns0 plnk wsdl ns5 client ns4 ns7 ns2 ns1 xsd ns6 ns9 xp20 bpws bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java">
  <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../ArenaOracleItemsBOMSubstituesProv_BPEL.wsdl"/>
            <oracle-xsl-mapper:rootElement name="Item" namespace="http://www.sunpowercorp.com/BOD/ProcessArenaOracleDataFeed/V1"/>
         </oracle-xsl-mapper:source>
         <oracle-xsl-mapper:source type="WSDL">
            <oracle-xsl-mapper:schema location="../ArenaOracleItemsBOMSubstituesProv_BPEL.wsdl"/>
            <oracle-xsl-mapper:rootElement name="defaultParams" namespace="http://www.sunpowercorp.com/ArenaOracleItemsBOMSubstituesProv/xsd/defaultParams/V1"/>
            <oracle-xsl-mapper:param name="defaultParams"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../ArenaOracleItemsBOMSubstituesProv_BPEL.wsdl"/>
            <oracle-xsl-mapper:rootElement name="Categories" namespace="http://www.sunpowercorp.com/ArenaOracleItemsBOMSubstituesProv/xsd/Categories/V1"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:mapShowPrefixes type="true"/>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.0.0(XSLT Build 151013.0700.0085) AT [TUE OCT 04 15:42:23 CDT 2016].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="defaultParams"/>
  <xsl:template match="ns1:Item">
    <xsl:variable name="makeBuyCode" select="$defaultParams/ns2:defaultParams/ns2:makeBuyCode"/>
    <ns5:Categories>
      <xsl:if test="./ns9:AdditionalAttributes[@groupLabel='Arena Solutions Custom Attributes']">
        <xsl:variable name="Wattage">
          <xsl:choose>
            <xsl:when test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Billable Watts']/@ns8:value !=''">
              <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Billable Watts']/@ns8:value"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="'NA'"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:if test="$Wattage!='' and $Wattage!='NA'">
          <ns5:Category>
            <ns5:Category_SetName>
              <xsl:text>SPWR_BILLABLE_WATTS</xsl:text>
            </ns5:Category_SetName>
            <ns5:Category_Name>
              <xsl:value-of select="$Wattage"/>
            </ns5:Category_Name>
          </ns5:Category>
        </xsl:if>
        <!-- Define fields to be concatenated ConcateValue1 Begin -->
        <xsl:variable name="ProductType">
          <xsl:if test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Product Type']/@ns8:value !=''">
            <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Product Type']/@ns8:value"/>
          </xsl:if>
        </xsl:variable>
        <xsl:variable name="Platform">
          <xsl:if test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Platform']/@ns8:value !=''">
            <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Platform']/@ns8:value"/>
          </xsl:if>
        </xsl:variable>
        <xsl:variable name="GlassType">
          <xsl:if test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Glass Type']/@ns8:value !=''">
            <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Glass Type']/@ns8:value"/>
          </xsl:if>
        </xsl:variable>
        <xsl:variable name="CellColor">
          <xsl:if test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Cell Color']/@ns8:value !=''">
            <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Cell Color']/@ns8:value"/>
          </xsl:if>
        </xsl:variable>
        <xsl:variable name="Backsheet">
          <xsl:if test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Backsheet']/@ns8:value !=''">
            <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Backsheet']/@ns8:value"/>
          </xsl:if>
        </xsl:variable>
        <xsl:variable name="Certification">
          <xsl:if test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Certification']/@ns8:value !=''">
            <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Certification']/@ns8:value"/>
          </xsl:if>
        </xsl:variable>
        <xsl:variable name="temp">
          <xsl:value-of select="concat($ProductType, $Platform, $GlassType, $CellColor, $Backsheet, $Certification)"/>
        </xsl:variable>
        <xsl:variable name="ConcateValue1">
          <xsl:if test="string-length($temp)>0">
            <xsl:value-of select="concat($ProductType, &quot;.&quot;, $Platform, &quot;.&quot;, $GlassType, &quot;.&quot;, $CellColor, &quot;.&quot;, $Backsheet, &quot;.&quot;, $Certification)"/>
          </xsl:if>
        </xsl:variable>
        <xsl:if test="$ConcateValue1!=''">
          <ns5:Category>
            <ns5:Category_SetName>
              <xsl:text>SPWR_PLANNING_CATEGORY</xsl:text>
            </ns5:Category_SetName>
            <ns5:Category_Name>
              <xsl:value-of select="$ConcateValue1"/>
            </ns5:Category_Name>
          </ns5:Category>
        </xsl:if>
        <!-- Define fields to be concatenated ConcateValue1 End -->
        <!-- Define fields to be concatenated ConcateValue2 Begin -->
        <xsl:variable name="Series">
          <xsl:choose>
            <xsl:when test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Series']/@ns8:value !=''">
              <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Series']/@ns8:value"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="'NA'"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="CellTech">
          <xsl:if test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Cell Technology']/@ns8:value !=''">
            <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Cell Technology']/@ns8:value"/>
          </xsl:if>
        </xsl:variable>
        <xsl:variable name="temp2">
          <xsl:value-of select="concat($Series, $CellTech)"/>
        </xsl:variable>
        <xsl:variable name="ConcateValue2">
          <xsl:if test="string-length($temp2)>0">
            <xsl:value-of select="concat($Series, &quot;.&quot;, $CellTech)"/>
          </xsl:if>
        </xsl:variable>
        <xsl:if test="$ConcateValue2!=''">
          <ns5:Category>
            <ns5:Category_SetName>
              <xsl:text>SPWR_SERIES_TECH</xsl:text>
            </ns5:Category_SetName>
            <ns5:Category_Name>
              <xsl:value-of select="$ConcateValue2"/>
            </ns5:Category_Name>
          </ns5:Category>
        </xsl:if>
        <!-- Define fields to be concatenated ConcateValue2 End -->
        <xsl:if test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Planning Category']/@ns8:value !=''">
          <ns5:Category>
            <ns5:Category_SetName>
              <xsl:text>Planning</xsl:text>
            </ns5:Category_SetName>
            <ns5:Category_Name>
              <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Planning Category']/@ns8:value"/>
            </ns5:Category_Name>
          </ns5:Category>
        </xsl:if>
        <!-- Define fields to be concatenated ConcateValue3 Begin -->
        <xsl:variable name="Inv1">
          <xsl:for-each select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute">
            <xsl:if test="contains(./@ns8:name, '(inv 1)')">
              <xsl:value-of select="./@ns8:value"/>
            </xsl:if>
          </xsl:for-each>
        </xsl:variable>
        <xsl:variable name="Inv2">
          <xsl:for-each select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute">
            <xsl:if test="contains(./@ns8:name, '(inv 2)')">
              <xsl:value-of select="./@ns8:value"/>
            </xsl:if>
          </xsl:for-each>
        </xsl:variable>
        <xsl:variable name="Inv3">
          <xsl:for-each select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute">
            <xsl:if test="contains(./@ns8:name, '(inv 3)')">
              <xsl:value-of select="./@ns8:value"/>
            </xsl:if>
          </xsl:for-each>
        </xsl:variable>
        <xsl:variable name="temp3">
          <xsl:value-of select="concat($Inv1, $Inv2, $Inv3)"/>
        </xsl:variable>
        <xsl:variable name="ConcateValue3">
          <xsl:if test="string-length($temp3)>0">
            <xsl:value-of select="concat($Inv1, &quot;.&quot;, $Inv2, &quot;.&quot;, $Inv3)"/>
          </xsl:if>
        </xsl:variable>
        <xsl:if test="$ConcateValue3!=''">
          <ns5:Category>
            <ns5:Category_SetName>
              <xsl:text>Inventory</xsl:text>
            </ns5:Category_SetName>
            <ns5:Category_Name>
              <xsl:value-of select="$ConcateValue3"/>
            </ns5:Category_Name>
          </ns5:Category>
        </xsl:if>
        <!-- Define fields to be concatenated ConcateValue3 End -->
        <!-- Define fields to be concatenated ConcateValue4 Begin -->
        <xsl:variable name="PowerType">
          <xsl:if test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Power Type']/@ns8:value !=''">
            <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Power Type']/@ns8:value"/>
          </xsl:if>
        </xsl:variable>
        <xsl:variable name="BusinessSegment">
          <xsl:if test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Business Segment']/@ns8:value !=''">
            <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Business Segment']/@ns8:value"/>
          </xsl:if>
        </xsl:variable>
        <xsl:variable name="temp4">
          <xsl:value-of select="concat($PowerType, $BusinessSegment)"/>
        </xsl:variable>
        <xsl:variable name="ConcateValue4">
          <xsl:if test="string-length($temp4)>0">
            <xsl:value-of select="concat($PowerType, &quot;.&quot;, $BusinessSegment, &quot;.&quot;, &quot;NA&quot;, &quot;.&quot;, &quot;NA&quot;)"/>
          </xsl:if>
        </xsl:variable>
        <xsl:if test="$ConcateValue4!=''">
          <ns5:Category>
            <ns5:Category_SetName>
              <xsl:text>Demand Planning</xsl:text>
            </ns5:Category_SetName>
            <ns5:Category_Name>
              <xsl:value-of select="$ConcateValue4"/>
            </ns5:Category_Name>
          </ns5:Category>
        </xsl:if>
        
         <xsl:if test="$BusinessSegment!=''">
          <ns5:Category>
            <ns5:Category_SetName>
              <xsl:text>SPWR Channel Hierarchy</xsl:text>
            </ns5:Category_SetName>
            <ns5:Category_Name>
                 <xsl:value-of select="concat($BusinessSegment, &quot;.&quot;, &quot;NA&quot;, &quot;.&quot;, &quot;1995&quot;)"/>
            </ns5:Category_Name>
          </ns5:Category>
        </xsl:if>
        <!-- Define fields to be concatenated ConcateValue4 End -->
        <!-- Define fields to be concatenated ConcateValue5 Begin -->
        <xsl:variable name="BinType">
          <xsl:if test="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Bin Type']/@ns8:value !=''">
            <xsl:value-of select="./ns9:AdditionalAttributes/ns9:AdditionalAttribute[@ns8:name='Bin Type']/@ns8:value"/>
          </xsl:if>
        </xsl:variable>
        <xsl:variable name="OtherMaterialsSegOne" select="'APPAREL,BUSBAR,CHEMICAL,CLIP,CONNECTOR,CONSUMABLE, DIODE,EPE INSULATOR,LABEL,PACKAGING,SAFETY MANUAL,SCREW,SEALANT,SHIELD,SOLDER PASTE,TABS,TAPE,WIRE'"/>
        <xsl:variable name="SegmentOne">
          <xsl:if test="$ProductType='MODULE'">
            <xsl:if test="$makeBuyCode='1'">
              <xsl:value-of select="'SPWR PV'"/>
            </xsl:if>
            <xsl:if test="$makeBuyCode='2'">
              <xsl:value-of select="'3P PVs'"/>
            </xsl:if>
          </xsl:if>
          <xsl:if test="$ProductType='CELL'">
            <xsl:if test="$BinType='OffSpec'">
              <xsl:value-of select="'Offspec cells'"/>
            </xsl:if>
            <xsl:if test="$makeBuyCode='1' and ($BinType='High' or $BinType='Low')">
              <xsl:value-of select="'SPWR cells'"/>
            </xsl:if>
            <xsl:if test="$makeBuyCode='2'  and ($BinType='High' or $BinType='Low')">
              <xsl:value-of select="'3P cells'"/>
            </xsl:if>
          </xsl:if>
          <xsl:if test="$ProductType='BOS'">
            <xsl:value-of select="'BOS materials'"/>
          </xsl:if>
          <xsl:if test="$ProductType='INVERTER'">
            <xsl:value-of select="'Inverter'"/>
          </xsl:if>
          <xsl:if test="$ProductType='BACKSHEET'">
            <xsl:value-of select="'Backsheet'"/>
          </xsl:if>
          <xsl:if test="$ProductType='MASTER CELL'">
            <xsl:value-of select="'SPWR cells'"/>
          </xsl:if>
          <xsl:if test="$ProductType='EVA SHEET'">
            <xsl:value-of select="'Eva Sheets'"/>
          </xsl:if>
          <xsl:if test="$ProductType='FRAME SET'">
            <xsl:value-of select="'Frame'"/>
          </xsl:if>
          <xsl:if test="$ProductType='GLASS'">
            <xsl:value-of select="'Glass'"/>
          </xsl:if>
          <xsl:if test="$ProductType='INGOT'">
            <xsl:value-of select="'Ingot'"/>
          </xsl:if>
          <xsl:if test="$ProductType='JUNCTION BOX'">
            <xsl:value-of select="'J-box'"/>
          </xsl:if>
          <xsl:if test="$ProductType='LAMINATE'">
            <xsl:value-of select="'Laminates'"/>
          </xsl:if>
          <xsl:if test="$ProductType='STRING'">
            <xsl:value-of select="'String'"/>
          </xsl:if>
          <xsl:if test="$ProductType='WAFER'">
            <xsl:value-of select="'Wafer'"/>
          </xsl:if>
          <xsl:if test="$ProductType='NA'">
            <xsl:value-of select="'NA'"/>
          </xsl:if>
          <xsl:if test="$ProductType='Null'">
            <xsl:value-of select="'Null'"/>
          </xsl:if>
          <xsl:if test="contains(lower-case($OtherMaterialsSegOne), lower-case($ProductType))">
            <xsl:value-of select="'Other materials'"/>
          </xsl:if>
        </xsl:variable>
        <xsl:variable name="PlatformList" select="'12,120,128 16,18,22,24,32,72,96'"/>
        <xsl:variable name="SegmentThree">
          <xsl:choose>
            <xsl:when test="($ProductType='MODULE' and $Platform!='') and contains($PlatformList,$Platform)">
              <xsl:value-of select="$Platform"/>
            </xsl:when>
         
            <xsl:when test="$ProductType='MODULE' and $Platform='T5'">
              <xsl:value-of select="'96'"/>
            </xsl:when>
            <xsl:when test="$ProductType='GLASS' and $GlassType='AR'">
              <xsl:value-of select="'AR'"/>
            </xsl:when>
            <xsl:when test="$ProductType='GLASS' and $GlassType='Non-AR'">
              <xsl:value-of select="'Non-AR'"/>
            </xsl:when>
            <xsl:when test="$ProductType='CELL' and $BinType='High'">
              <xsl:value-of select="'High Bin'"/>
            </xsl:when>
            <xsl:when test="$ProductType='CELL' and $BinType='Low'">
              <xsl:value-of select="'Low Bin'"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="'NA'"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="OtherMaterialsSegFour" select="'Inverter,Backsheet,Eva Set,Frame Set,Glass,Junction Box'"/>
        <xsl:variable name="SegmentFour">
          <xsl:choose>
            <xsl:when test="contains(lower-case($OtherMaterialsSegFour), lower-case($ProductType))">
              <xsl:value-of select="'Other materials'"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$SegmentOne"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="temp5">
          <xsl:value-of select="concat($SegmentOne, $Wattage, $SegmentThree, $SegmentFour)"/>
        </xsl:variable>
        <xsl:variable name="ItemClassWattage">
          <xsl:choose>
            <xsl:when test="$Wattage=1">
              <xsl:value-of select="'NA'"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$Wattage"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
       <xsl:variable name="ConcateValue5">
          <xsl:if test="string-length($temp5)>0">
            <xsl:value-of select="concat($SegmentOne, &quot;|&quot;, $ItemClassWattage, &quot;|&quot;, $SegmentThree, &quot;|&quot;, $SegmentFour, &quot;|&quot;, &quot;NA&quot;, &quot;|&quot;, &quot;NA&quot;)"/>
          </xsl:if>
        </xsl:variable>
        <xsl:if test="$ConcateValue5!=''">
          <ns5:Category>
            <ns5:Category_SetName>
              <xsl:text>SPWR Item Class</xsl:text>
            </ns5:Category_SetName>
            <ns5:Category_Name>
              <xsl:value-of select="$ConcateValue5"/>
            </ns5:Category_Name>
          </ns5:Category>
        </xsl:if>
        <!-- Define fields to be concatenated ConcateValue5 End -->
         </xsl:if>
    </ns5:Categories>
  </xsl:template>
</xsl:stylesheet>